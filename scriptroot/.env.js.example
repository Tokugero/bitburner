export const bigWeight = 2048; // Minimum node size before multitasking (usually purchased servers)
export const hgwMemoryBuffer = 2; // Amount of ram to dedicate to hack growth
export const homehgwBuffer = 32; // Amount of headroom to give home
export const hostMemoryFloor = 16; // minimum server to run scripts on
export const url = "http://localhost:8080/listener?";
export const enableHacknet = true;

// HGW tuning
export const endGame = false; // true = experience rush, false = reputation rush
export const effectBuffer = .8; // buffer for hack loop threads
export const weakenBuffer = .1; // buffer for weaken loop threads
export const securityBuffer = 1; // Extra buffer for starting hack on server
export const moneyBuffer = .5; // percentage to multiply funds for buffers (like grow)

// CPU tuning
export const shareBuffer = .1; // Percentage to multiply cpu for shares

// Money tuning
export const upgradeBuffer = .7; // Percentage to multiply funds for upgrades

// Queues (Increase capacity of each queue in 'Options > Netscript port size')
export const hackQueue = true; // toggle to enable queue instead of sort
export const monitoringQueue = 1; // Port for monitoring queue
export const bigHackingQueue = 2; // Port for managing big nodes hgw
export const bigHackingIPQueue = 6; // Port for tracking in progress
export const bigHackingDB = 8; // Port for tracking in progress
export const smallHackingQueue = 3; // Port for managing small nodes hgw
export const smallHackingIPQueue = 7; // Port for tracking in progress
export const smallHackingDB = 9; // Port for tracking in progress
export const contractQueue = 4; // Port for contracts
export const serverListQueue = 5; // Port for storing server data
export const testingQueue = 20; // Port for testing